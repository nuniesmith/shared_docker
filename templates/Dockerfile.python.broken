# Simplified Python Dockerfile for FKS Trading Systems
ARG PYTHON_VERSION=3.13
ARG BUILD_TYPE=cpu
ARG CUDA_VERSION=12.8.0
ARG SERVICE_PORT=8000

# Build stage
FROM python:${PYTHON_VERSION}-slim AS build

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    curl \
    git \
    pkg-config \
    libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /venv
ENV PATH="/venv/bin:$PATH"

# Install Python dependencies
COPY requirements*.txt ./
RUN pip install --no-cache-dir --upgrade pip wheel 
    && pip install --no-cache-dir -r requirements.txt

# Copy source code
COPY src/ ./src/

# Runtime stage
FROM python:${PYTHON_VERSION}-slim AS final

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends 
    libpq5 
    curl 
    && apt-get clean 
    && rm -rf /var/lib/apt/lists/*

# Copy from build stage
COPY --from=build /venv /venv
COPY --from=build /app/src ./src

# Create non-root user
ARG USER_ID=1088
RUN useradd --uid ${USER_ID} --create-home --shell /bin/bash appuser
USER appuser

# Environment
ENV PATH="/venv/bin:$PATH" 
    PYTHONUNBUFFERED=1 
    PYTHONDONTWRITEBYTECODE=1 
    PYTHONHASHSEED=random 
    PYTHONPATH=/app/src

EXPOSE ${SERVICE_PORT}

ENTRYPOINT ["uvicorn"]
CMD ["src.main:app", "--host", "0.0.0.0", "--port", "8000"]

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 
    CMD curl -f http://localhost:${SERVICE_PORT}/health || exit 1
